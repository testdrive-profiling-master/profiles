--[[
* Docgen emoji를 위한 font awesome 목록들 *
폰트 다운로드	: https://fontawesome.com/download
아이콘 검색	: https://fontawesome.com/search (vue 스타일로 검색할 것!)

다운 받은 폰트와 icons.json 파일을 이곳에 복사해 둔다.
폰트는 otf -> ttf 로 변경한 뒤, 다시 .odttf 로 변환하여 encrypted 된 폰트로 변경하고 암호키를 확인해야 한다.
--]]
if docgen == nil then	-- font awesome resouce table 자동 생성
	local cjson			= require ("cjson", "lua-cjson")
	local font_json		= nil

	do	-- read json
		local sJson = String()
		local f		= TextFile()
		if f:Open("icons.json") == false then
			error("No 'icons.json' file.")
		end
		font_json = cjson.decode(f:GetAll())
		f:Close()
	end

	local fonts			= {}
	fonts.solid			= {}
	fonts.solid.alias	= "fas"
	fonts.regular		= {}
	fonts.regular.alias	= "far"
	fonts.brands		= {}
	fonts.brands.alias	= "fab"

	-- make list
	for key, v in pairs(font_json) do
		for _, font_name in ipairs(v.free) do
			local	font = fonts[font_name]

			if font == nil then
				error("Can't find font! : " .. font_name)
			end
			
			if font.db == nil then
				font.db	= {}
			end
		
			font.db[key] = utf8.char(tonumber(v.unicode, 16))
		end
	end

	local f_scv = TextFile()
	local f_lua = TextFile()
	f_scv:Create("resources.scv")
	if f_lua:Create("emoji.resources.lua") then
		f_lua:Put("-- resource from icons.json(Font Awesome), generated by 'fontawesome.lua'\n")
		for font_name, font in key_pairs(fonts) do
			f_lua:Put("docgen.emoji.font." .. font.alias .. ".db = {\n")
			f_scv:Put(font.alias .. "\n")
			
			local iColCount = 0
			for id_name, code in key_pairs(font.db) do
				f_lua:Put("	[\"".. id_name .. "\"] = \"" .. code .. "\",\n")
				f_scv:Put(id_name .. "	" .. "@<" .. font.alias .. ":" .. id_name .. ">")
				iColCount = iColCount + 1
				if iColCount == 4 then
					f_scv:Put("\n")
					iColCount = 0
				else
					f_scv:Put("\t")
				end
			end
			f_lua:Put("}\n\n")
			f_scv:Put("\n\n")
		end
		f_lua:Close()
		f_scv:Close()
		LOGI("Done!")
	else
		error("Can't create resource Lua file.")
	end
	
	os.exit(1)
end

docgen.emoji						= {}
docgen.emoji.font					= {}
docgen.emoji.font.fas				= {}
docgen.emoji.font.fas.name			= "Font Awesome 6 Free Solid"
docgen.emoji.font.fas.alias			= "fa_solid"
docgen.emoji.font.fas.filename		= "fontawesome_solid.odttf"
docgen.emoji.font.fas.key			= "{8B7B9185-7136-4E81-A510-522B0B235A76}"
docgen.emoji.font.far				= {}
docgen.emoji.font.far.name			= "Font Awesome 6 Free Regular"
docgen.emoji.font.far.alias			= "fa_regular"
docgen.emoji.font.far.filename		= "fontawesome_regular.odttf"
docgen.emoji.font.far.key			= "{4FBADEAB-3847-40CB-8384-CE9DC33871ED}"
docgen.emoji.font.fab				= {}
docgen.emoji.font.fab.name			= "Font Awesome 6 Brands Regular"
docgen.emoji.font.fab.alias			= "fa_brands"
docgen.emoji.font.fab.filename		= "fontawesome_brands.odttf"
docgen.emoji.font.fab.key			= "{D8DFF376-466D-4D04-AB9E-98EDA7FC699F}"

RunScript("docgen/emoji.resources")	-- font awesome free resources

docgen.emoji.install_font = function (font_id)
	local font	= docgen.emoji.font[font_id]
	if font ~= nil then
		if font.installed ~= true then
			docgen.doc:AddFont(docgen.profile_path.s .. "common/bin/codegen/docgen/" .. font.filename, font.alias, font.key, false);
			font.installed	= true
		end
		return true
	else
		LOGE("Emoji font(" .. font_id .. ") is not existed.")
	end
	return false
end

docgen.emoji.get = function (font_id, sToken)
	local	font	= docgen.emoji.font[font_id]
	
	if font == nil then
		error("Un-recognized emoji font ID : '" .. font_id .. ":...'")
	end
	
	docgen.emoji.install_font(font_id)
	
	local sUnicode	= font.db[sToken]
	
	if sUnicode == nil then
		error("Un-recognized emoji font token : '" .. font_id .. ":".. sToken .. "'")
	end
	
	return ("@<font:" .. font.alias .. ">" .. sUnicode .. "@</font>")
end
